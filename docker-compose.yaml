version: '3.4'
networks:
  nginx-php74-mysql8: null
services:
  node-lts-service:
    build:
      context: .
      dockerfile: ./.docker/DockerfileNode
    container_name: 'nodeltscontainer'
    volumes:
      - './:/var/www/app'
    image: 'node-lts-gulp'
    tty: true
    networks:
      - nginx-php74-mysql8
  nginx-service:
    image: 'nginx:stable-alpine'
    container_name: nginx-container
    ports:
      - '80:80'
    volumes:
      - './:/var/www/app'
      - './.docker/default.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - php74-service
      - mysql8-service
    networks:
      - nginx-php74-mysql8
  php74-service:
    image: celsoandrade/php74-symfony-mysql:latest
    container_name: php74-container
    ports:
      - '9000:9000'
    volumes:
      - './:/var/www/app'
      - 'symfony-log:/var/log/app/var/log'
    networks:
      - nginx-php74-mysql8
  mysql8-service:
    image: 'mysql:8'
    container_name: mysql8-container
    ports:
      - '3306:3306'
    volumes:
      - 'mysql-data:/var/lib/mysql'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci'
    restart: always
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    networks:
      - nginx-php74-mysql8
volumes:
  mysql-data: null
  symfony-log: null
